version: "3.7"
services:
  redis:
    image: reg.haiyisec.com/redis:latest
    restart: always
    networks:
      - ${NETWORKS}
  postgres:
    image: reg.haiyisec.com/postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_USER: outline
      POSTGRES_PASSWORD: outline
      POSTGRES_DB: outline
      KEYCLOAK_USER: keycloak
      KEYCLOAK_PASSWORD: keycloak
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
      - ./config/init/:/docker-entrypoint-initdb.d/
    restart: always
    networks:
      - ${NETWORKS}
  minio:
    image: reg.haiyisec.com/minio/minio:${MINIO_VERSION}
    volumes:
      - ./data/minio_root:/minio_root:z
      - ./data/certs:/root/.minio/certs:z
    command: "minio server /minio_root"
    env_file:
      - ./env.minio
    restart: always
    networks:
      - ${NETWORKS}
  createbuckets:
    image: reg.haiyisec.com/minio/mc:${MINIO_MC_VERSION}
    depends_on:
      - minio
    env_file:
      - ./env.minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/outline-bucket;
      /usr/bin/mc anonymous set download minio/outline-bucket;
      exit 0;
      "
    networks:
      - ${NETWORKS}
  outline:
    image: reg.haiyisec.com/outlinewiki/outline:latest
    command: sh -c "yarn db:migrate --env production-ssl-disabled && yarn start"
    environment:
      - DATABASE_URL=postgres://outline:outline@postgres:5432/outline
      - DATABASE_URL_TEST=postgres://outline:outline@postgres:5432/outline-test
      - REDIS_URL=redis://redis:6379
      - AWS_S3_UPLOAD_BUCKET_NAME=outline-bucket
    env_file:
      - ./env.outline
      - ./env.oidc
    restart: always
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - ${NETWORKS}
  keycloak:
    image: reg.haiyisec.com/keycloak/keycloak:${KEYCLOAK_VERSION}
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=change_me
      - KC_DB=postgres
      - KC_DB_URL_HOST=postgres
      - KC_DB_URL_DATABASE=outline
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_DB_SCHEMA=keycloak
      - PROXY_ADDRESS_FORWARDING=true
      - KC_HOSTNAME=wiki.haiyisec.com
      - KC_HTTP_RELATIVE_PATH=/keycloak/
      - KC_PROXY=edge
    restart: always
    depends_on:
      - postgres
    networks:
      - ${NETWORKS}
  nginx:
    image: reg.haiyisec.com/nginx:stable-alpine3.17
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./config/nginx/:/etc/nginx/conf.d/:ro
      - ./config/certs:/etc/nginx/certs:ro
    restart: always
    depends_on:
      - minio
      - outline
      - keycloak
    networks:
      - ${NETWORKS}
networks:
  ${NETWORKS}:
    external: ${NETWORKS_EXTERNAL}
